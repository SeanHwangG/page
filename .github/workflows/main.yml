name: hosting

on:
  push:
    branches: ["*"]

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      SERVICE_ACCOUNT_JSON: ${{ secrets.SERVICE_ACCOUNT_JSON }}

    steps:
      - name: Checkout code # checking our the code at current commit that triggers the workflow
        uses: actions/checkout@v2
      - name: Cache dependency # caching dependency will make our build faster.
        uses: actions/cache@v2 # for more info checkout pip section documentation at https://github.com/actions/cache
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Setup python environment # setting python environment to 3.x
        uses: actions/setup-python@v2
        with:
          python-version: '3.x' # if you want multiple python version run just use matrix strategy in job config. See the documentation of GitHub Actions
      - name: Install requirements # install application requirements
        run: |
          pip install -r requirements.txt
      - name: Setup
        run: |
          echo "${{ secrets.DOT_ENV }}" >> .env
          python -m script.setup --sqlite
        shell: bash
      - name: Test
        run: python -m script.test --all

# deploy-job:
#  runs-on: ubuntu-latest
#  needs: [test]
#  steps:
#    - name: Django aws eb deployment
#      uses: joel-hanson/django-aws-eb-deploy@V1.1
#      with:
#        python_version: 3.8.2
#        aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#        aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#        unit_testing: true
#        deploy: true
#        min_coverage: 10
#        postgresql_required: true
#        security_check: true